self.webpackChunk([12],{"2tT0":function(t,n,r){"use strict";r.d(n,"a",function(){return e});class e{constructor(t){this._input=t.trim()}readLineByLine(t){const n=this._input.split(this.getSeperator()).filter(t=>t.length>0);return t?n.map(t):n}readEntriesSeperatedByWhiteline(t){const n=this._input.split(this.getSeperator()),r=[];let e=[];return n.forEach(t=>{0===t.length?e.length>0&&(r.push(e),e=[]):e.push(t)}),e.length>0&&r.push(e),t?r.map(t):r}getSeperator(){return-1===this._input.indexOf("\r")?"\n":-1===this._input.indexOf("\n")?"\r":"\r\n"}}},Kqjy:function(t,n,r){"use strict";r.r(n),r.d(n,"dayEightPartTwo",function(){return i});var e=r("2tT0");function i(t){class n{constructor(){this._accumulator=0,this._instruction=0,this._visitedInstructions=new Set}get instruction(){return this._instruction}get accumulator(){return this._accumulator}moveNext(){this._instruction++}accumlate(t){this._accumulator+=t,this.moveNext()}jump(t){this._instruction+=t}hasVisitedCurrentInstructionBefore(){return!!this._visitedInstructions.has(this._instruction)||(this._visitedInstructions.add(this._instruction),!1)}}class r{constructor(t){this.amount=t}perform(t){t.accumlate(this.amount)}}class i{constructor(t){this.amount=t}perform(t){t.jump(this.amount)}}class s{constructor(t){this.amount=t}perform(t){t.moveNext()}}const o=/([a-z]{3}) ([+-]\d+)/,u=new e.a(t).readLineByLine(t=>{const[,n,e]=t.match(o),u=Number(e);switch(n){case"acc":return new r(u);case"jmp":return new i(u);case"nop":return new s(u);default:throw new Error("Invalid operation\n"+n)}});for(let e=0;e<u.length;e++){const t=u[e];if(t instanceof r)continue;const o=[...u];o[e]=t instanceof s?new i(t.amount):new s(t.amount);const c=new n;for(;!c.hasVisitedCurrentInstructionBefore();){const t=c.instruction;if(t===o.length-1)return o[t].perform(c),c.accumulator;t>=o.length||o[t].perform(c)}}throw new Error("Result not found")}}});