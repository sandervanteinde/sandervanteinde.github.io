self.webpackChunk([47],{zq0i:function(e,n,r){"use strict";r.r(n),r.d(n,"dayTwelvePartOne",function(){return i});const i="throw new Error('This is still a work in progress and will not result in a correct result');\nclass Recipe {\n  readonly ingredients: Set<string>;\n  readonly allergies: Set<string>;\n  constructor(ingredients: ReadonlyArray<string>, allergies: ReadonlyArray<string>) {\n    this.ingredients = new Set(ingredients);\n    this.allergies = new Set(allergies);\n  }\n}\nconst lineMatch = /^([a-z ]+) (contains ([a-z, ]+))$/i;\nconst reader = new MyFileReader(input);\nconst recipes = reader.readLineByLine(line => {\n  const match = lineMatch.exec(line);\n  if (!match) throw new Error(`Line in input dit not match the regex\nline: ${line}\nregex: ${lineMatch }`);\n  const [, ingredients, allergies] = match;\n  return new Recipe(ingredients.split(' '), allergies.split(',').map(ingredient => ingredient.trim()));\n});\n\nfunction *allergiesExcept(allergiesToIgnore: Set<String>): Iterable<string> {\n  for(const allergyFromSet of allAllergies) {\n    if(allergiesToIgnore.has(allergyFromSet)) continue;\n    yield allergyFromSet;\n  }\n}\nconst allAllergies = new Set<string>();\nconst allIngredients = new Set<string>();\nrecipes.forEach(recipe => {\n  recipe.allergies.forEach(allergy => allAllergies.add(allergy))\n  recipe.ingredients.forEach(ingredient => allIngredients.add(ingredient));\n});\nconst allIngredientsWithAllergies = new Map(Array.from(allIngredients.values()).map(ingredient => [ingredient, new Set(allAllergies.values())]));\n\nrecipes.forEach(recipe => recipe.ingredients.forEach(ingredient => {\n  const ingredientAllergies = allIngredientsWithAllergies.get(ingredient)!;\n  for(const allergy of allergiesExcept(recipe.allergies)) {\n    ingredientAllergies.delete(allergy);\n  }\n}));\n\nconst ingredientsWithoutAllergies = Array.from(allIngredientsWithAllergies)\n  .filter(([ingredient, allergies]) => allergies.size === 0)\n  .map(([ingredient]) => ingredient);\n\n  return recipes.reduce((prev, recipe) => prev + ingredientsWithoutAllergies.reduce((prev, curr) => prev + (recipe.ingredients.has(curr) ? 1 : 0), 0), 0);"}});